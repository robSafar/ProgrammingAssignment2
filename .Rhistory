q()
a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 15)
info.packages("slidify")
packages
?packages
?available
?install
install.packages("KernSmooth")
remove.packages("KernSmooth", lib="/usr/local/Cellar/r/3.3.1_3/R.framework/Versions/3.3/Resources/library")
library(KernSmooth)
install.packages(swirl)
install.packages("swirl")
library(swirl)
library("swirl")
install.packages("httr")
install.packages("swirl")
library(httr)
library("httr")
install.packages(c("cluster", "codetools", "foreign", "lattice", "Matrix", "mgcv", "survival"), lib="/usr/local/Cellar/r/3.3.1_3/R.framework/Versions/3.3/Resources/library")
install.packages("swirl")
install.packages("httr")
install.packages("openssl")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- spally(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
q()
library("swirl", lib.loc="/usr/local/lib/R/3.3/site-library")
swirl()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
data("iris")
?iris
data("iris")
data(iris)
?iris
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
with(mtcars,tapply(mpg,cyl,mean))
tapply(mtcars$mpg,mtcars$cyl,mean)
apply(mtcars,2,mean)
mean(mtcars$mpg,mtcars$cyl)
View(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
cyl_hp <- tapply(mtcars$hp, mtcars$cyl, mean)
class(cyl_hp)
cyl_hp <- as.vector(tapply(mtcars$hp, mtcars$cyl, mean))
diff(cyl_hp$["4"],cly_hp["8"])
cyl_hp["4"] - cly_hp["8"]
cyl_hp["4"] - cyl_hp["8"]
four <- cyl_hp["4"]
rm(four)
cyl_hp[1] - cyl_hp[3]
cyl_hp[3] - cyl_hp[1]
q()
setwd("/Users/rob/Repositories/ProgrammingAssignment2")
getwd()
setwd("/Users/robsafar/Repositories/ProgrammingAssignment2")
getwd()
dir()
load("cachematrix.R")
source("cachematrix.R")
source("README.md")
source('~/Repositories/ProgrammingAssignment2/cachematrix.R')
makeVector
makeVector(c(1,2,3,4,5,6,7,8,9))
cachemean(c(1,2,3,4,5,6,7,8))
?solve
matrixone <- matrix(1:25, 5, 5)
matrixone
solve(matrixone)
makeVector
makeVector()
cachemean
cachemean()
x <- c(rnorm(25,25))
rm(matrixone)
cachemean(x)
makeVector(x)
cachemean(x)
x <- matrix(rnorm(25,25),5,5)
x
makeVector(x)
testInheritedMethods() <- matrix(rnorm(25,25),5,5)
test <- matrix(rnorm(25,25),5,5)
rm(x)
makeVector(test)
solve(test)
untest <- solve(test)
testuntest
test
untest
solve(untest)
makeVector
testvector <- c(rnorm(25,1))
makeVector(testvector)
source('~/Repositories/ProgrammingAssignment2/cachematrix.R')
test
cacheSolve(test)
cachemean(testvector)
source('~/Repositories/ProgrammingAssignment2/cachematrix.R')
source('~/Repositories/ProgrammingAssignment2/cachematrix.R')
rm(testvector)
rm(test,untest)
myVector <- makeVector(1:15)
cachemean(myVector)
cachemean(myVector)
test <- matrix(rnorm(25,1),5,5)
myMatrix <- makeCacheMatrix(test)
cacheSolve(myMatrix)
cacheSolve(myMatrix)
cacheSolve(myMatrix)
rm(myMatrix,myVector)
cacheSolve(test)
myMatrix <- makeCacheMatrix(test)
text <- matrix(rnorm(23,1), ncol=5)
text <- matrix(rnorm(25,2),5,5)
test <- matrix(rnorm(25,2),5,5)
rm(text)
cacheSolve(myMatrix)
source('~/Repositories/ProgrammingAssignment2/cachematrix.R')
